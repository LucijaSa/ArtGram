// Generated by Dagger (https://dagger.dev).
package com.example.artgram.viewmodels;

import com.example.artgram.repositories.ImagesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UploadViewModel_Factory implements Factory<UploadViewModel> {
  private final Provider<ImagesRepository> imagesRepositoryProvider;

  public UploadViewModel_Factory(Provider<ImagesRepository> imagesRepositoryProvider) {
    this.imagesRepositoryProvider = imagesRepositoryProvider;
  }

  @Override
  public UploadViewModel get() {
    return newInstance(imagesRepositoryProvider.get());
  }

  public static UploadViewModel_Factory create(
      Provider<ImagesRepository> imagesRepositoryProvider) {
    return new UploadViewModel_Factory(imagesRepositoryProvider);
  }

  public static UploadViewModel newInstance(ImagesRepository imagesRepository) {
    return new UploadViewModel(imagesRepository);
  }
}
